<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"
			crossorigin="anonymous"
		/>
		<title>Go Chat v2</title>
		<style>
			.chatbox {
				min-height: 180px;
				outline: 1px solid silver;
				padding: 0.25rem;
			}
		</style>
	</head>
	<body>
		<div class="container">
			<div class="row">
				<div class="col">
					<h1 class="mt-2">Go Chat v2</h1>
					<hr />
				</div>
			</div>

			<div class="row">
				<div class="col-md-8">
					<h3>Chat</h3>
					<form class="form-group">
						<label for="username">Username</label>
						<input
							type="text"
							name="username"
							id="username"
							class="form-control"
							autocomplete="off"
						/>
						<label for="message">Message</label>
						<input
							type="text"
							name="message"
							id="message"
							class="form-control"
							autocomplete="off"
						/>
						<button class="btn btn-outline-secondary mt-3">
							Send Message
						</button>
					</form>
					<hr />
					<div id="output" class="chatbox mb-5"></div>
				</div>

				<div class="col-md-4">
					<h3>Activity</h3>
					<ul id="activity"></ul>
				</div>
			</div>
		</div>
	</body>

	<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js"
		integrity="sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/"
		crossorigin="anonymous"
	></script>
	<script src="https://cdn.jsdelivr.net/npm/reconnecting-websocket@4.4.0/dist/reconnecting-websocket-cjs.min.js"></script>
	<script>
		let socket = null

		window.onbeforeunload = () => {
			socket.send(JSON.stringify({ action: 'disconnect_client' }))
		}

		document.addEventListener('DOMContentLoaded', (ev) => {
			socket = new ReconnectingWebSocket('ws://localhost:8080/ws')

			socket.onopen = () => {
				console.log('Connection Success!')
				const payload = {
					action: 'change_username',
					username: username.value,
				}
				socket.send(JSON.stringify(payload))
			}

			socket.onclose = () => {
				console.log('Disconnected from WebSocket!')
			}

			socket.onerror = (err) => {
				console.log('A WebSocket error occurred!', err)
			}

			socket.onmessage = (msg) => {
				let data = JSON.parse(msg.data)

				switch (data.action) {
					case 'list_users':
						const ul = document.getElementById('activity')
						while (ul.firstChild) ul.removeChild(ul.firstChild)

						data.connectedUsers.forEach((username) => {
							const li = document.createElement('li')
							li.appendChild(document.createTextNode(username))
							ul.appendChild(li)
						})
						break

					case 'receive_message':
						const output = document.getElementById('output')
						const p = document.createElement('p')
						const b = document.createElement('b')
						b.textContent = `${data.messageType}: `
						p.appendChild(b)
						p.appendChild(document.createTextNode(data.message))
						p.style.marginBottom = 0
						output.appendChild(p)
						break
				}
			}
		})

		const username = document.getElementById('username')
		let currentUsername = ''
		username.onblur = () => {
			if (currentUsername == username.value) {
				// toast('username is not changed')
				return
			}
			const payload = {
				action: 'change_username',
				// @todo: validate username.
				username: username.value,
			}
			socket.send(JSON.stringify(payload))
		}
		username.onfocus = () => {
			currentUsername = username.value
		}

		const form = document.querySelector('form')
		form.onsubmit = (ev) => {
			ev.preventDefault()
			ev.stopPropagation()
			const message = document.getElementById('message')
			const payload = {
				action: 'send_message',
				message: message.value,
			}
			socket.send(JSON.stringify(payload))
			message.value = ''
		}
	</script>
</html>
